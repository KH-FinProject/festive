<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.festive.festiveserver.wagle.mapper.WagleMapper">

    <!-- 게시글 목록 조회 (페이징) -->
    <select id="selectBoardList" resultType="com.project.festive.festiveserver.wagle.dto.BoardDto">
        SELECT * FROM (
            SELECT ROWNUM rn, t.* FROM (
                SELECT 
                    b.BOARD_NO as boardNo,
                    b.BOARD_TITLE as boardTitle,
                    m.NICKNAME as memberNickname,
                    b.BOARD_CREATE_DATE as boardCreateDate,
                    b.BOARD_VIEW_COUNT as boardViewCount,
                    b.BOARD_LIKE_COUNT as boardLikeCount,
                    b.BOARD_COMMENT_COUNT as boardCommentCount
                FROM BOARD b
                JOIN MEMBER m ON b.MEMBER_NO = m.MEMBER_NO
                WHERE b.BOARD_DELETE_YN = 'N'
                <if test="boardTypeNo != null">
                    AND b.BOARD_TYPE_NO = #{boardTypeNo}
                </if>
                <if test="searchType != null and searchKeyword != null and searchKeyword != ''">
                    <choose>
                        <when test="searchType == 'title'">
                            AND b.BOARD_TITLE LIKE '%' || #{searchKeyword} || '%'
                        </when>
                        <when test="searchType == 'title_content'">
                            AND (b.BOARD_TITLE LIKE '%' || #{searchKeyword} || '%' 
                                 OR b.BOARD_CONTENT LIKE '%' || #{searchKeyword} || '%')
                        </when>
                        <when test="searchType == 'author'">
                            AND m.NICKNAME LIKE '%' || #{searchKeyword} || '%'
                        </when>
                    </choose>
                </if>
                ORDER BY b.BOARD_CREATE_DATE DESC
            ) t WHERE ROWNUM &lt;= #{offset} + #{limit}
        ) WHERE rn > #{offset}
    </select>

    <!-- 게시글 총 개수 조회 -->
    <select id="selectBoardCount" resultType="int">
        SELECT COUNT(*)
        FROM BOARD b
        JOIN MEMBER m ON b.MEMBER_NO = m.MEMBER_NO
        WHERE b.BOARD_DELETE_YN = 'N'
        <if test="boardTypeNo != null">
            AND b.BOARD_TYPE_NO = #{boardTypeNo}
        </if>
        <if test="searchType != null and searchKeyword != null and searchKeyword != ''">
            <choose>
                <when test="searchType == 'title'">
                    AND b.BOARD_TITLE LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test="searchType == 'title_content'">
                    AND (b.BOARD_TITLE LIKE '%' || #{searchKeyword} || '%' 
                         OR b.BOARD_CONTENT LIKE '%' || #{searchKeyword} || '%')
                </when>
                <when test="searchType == 'author'">
                    AND m.NICKNAME LIKE '%' || #{searchKeyword} || '%'
                </when>
            </choose>
        </if>
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="selectBoardDetail" resultType="com.project.festive.festiveserver.wagle.dto.BoardDto">
        SELECT 
            b.BOARD_NO as boardNo,
            b.BOARD_TYPE_NO as boardTypeNo,
            bt.BOARD_TYPE_NAME as boardTypeName,
            b.MEMBER_NO as memberNo,
            m.NICKNAME as memberNickname,
            b.BOARD_TITLE as boardTitle,
            b.BOARD_CONTENT as boardContent,
            b.BOARD_VIEW_COUNT as boardViewCount,
            b.BOARD_LIKE_COUNT as boardLikeCount,
            b.BOARD_COMMENT_COUNT as boardCommentCount,
            b.BOARD_CREATE_DATE as boardCreateDate,
            b.BOARD_UPDATE_DATE as boardUpdateDate,
            b.BOARD_DELETE_YN as boardDeleteYn
        FROM BOARD b
        JOIN MEMBER m ON b.MEMBER_NO = m.MEMBER_NO
        JOIN BOARD_TYPE bt ON b.BOARD_TYPE_NO = bt.BOARD_TYPE_NO
        WHERE b.BOARD_NO = #{boardNo} AND b.BOARD_DELETE_YN = 'N'
    </select>

    <!-- 게시글 조회수 증가 -->
    <update id="updateBoardViewCount">
        UPDATE BOARD 
        SET BOARD_VIEW_COUNT = BOARD_VIEW_COUNT + 1 
        WHERE BOARD_NO = #{boardNo}
    </update>

    <!-- 게시글 작성 -->
    <insert id="insertBoard" parameterType="com.project.festive.festiveserver.wagle.dto.BoardDto">
        <selectKey keyProperty="boardNo" resultType="Long" order="BEFORE">
            SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO BOARD (
            BOARD_NO, BOARD_TYPE_NO, MEMBER_NO, BOARD_TITLE, BOARD_CONTENT, 
            BOARD_VIEW_COUNT, BOARD_LIKE_COUNT, BOARD_COMMENT_COUNT, 
            BOARD_CREATE_DATE, BOARD_DELETE_YN
        ) VALUES (
            #{boardNo}, #{boardTypeNo}, #{memberNo}, #{boardTitle}, #{boardContent}, 
            0, 0, 0, #{boardCreateDate}, #{boardDeleteYn}
        )
    </insert>

    <!-- 게시글 수정 -->
    <update id="updateBoard" parameterType="com.project.festive.festiveserver.wagle.dto.BoardDto">
        UPDATE BOARD 
        SET BOARD_TITLE = #{boardTitle},
            BOARD_CONTENT = #{boardContent},
            BOARD_UPDATE_DATE = #{boardUpdateDate}
        WHERE BOARD_NO = #{boardNo}
    </update>

    <!-- 게시글 삭제 (논리삭제) -->
    <update id="deleteBoardLogical">
        UPDATE BOARD 
        SET BOARD_DELETE_YN = 'Y' 
        WHERE BOARD_NO = #{boardNo}
    </update>

    <!-- 게시글 좋아요 추가 -->
    <insert id="insertBoardLike">
        INSERT INTO BOARD_LIKE (LIKE_NO, BOARD_NO, MEMBER_NO, LIKE_CREATE_DATE)
        VALUES (SEQ_BOARD_LIKE_NO.NEXTVAL, #{boardNo}, #{memberNo}, SYSDATE)
    </insert>

    <!-- 게시글 좋아요 삭제 -->
    <delete id="deleteBoardLike">
        DELETE FROM BOARD_LIKE 
        WHERE BOARD_NO = #{boardNo} AND MEMBER_NO = #{memberNo}
    </delete>

    <!-- 게시글 좋아요 여부 확인 -->
    <select id="selectBoardLikeCheck" resultType="int">
        SELECT COUNT(*) 
        FROM BOARD_LIKE 
        WHERE BOARD_NO = #{boardNo} AND MEMBER_NO = #{memberNo}
    </select>

    <!-- 게시글 좋아요 수 업데이트 -->
    <update id="updateBoardLikeCount">
        UPDATE BOARD 
        SET BOARD_LIKE_COUNT = (
            SELECT COUNT(*) FROM BOARD_LIKE WHERE BOARD_NO = #{boardNo}
        )
        WHERE BOARD_NO = #{boardNo}
    </update>

    <!-- 댓글 목록 조회 -->
    <select id="selectCommentList" resultType="com.project.festive.festiveserver.wagle.dto.CommentDto">
        SELECT 
            c.COMMENT_NO as commentNo,
            c.BOARD_NO as boardNo,
            c.MEMBER_NO as memberNo,
            m.NICKNAME as memberNickname,
            c.COMMENT_CONTENT as commentContent,
            c.COMMENT_PARENT_NO as commentParentNo,
            c.COMMENT_CREATE_DATE as commentCreateDate,
            c.COMMENT_UPDATE_DATE as commentUpdateDate,
            c.COMMENT_DELETE_YN as commentDeleteYn
        FROM COMMENT c
        JOIN MEMBER m ON c.MEMBER_NO = m.MEMBER_NO
        WHERE c.BOARD_NO = #{boardNo} AND c.COMMENT_DELETE_YN = 'N'
        ORDER BY c.COMMENT_PARENT_NO NULLS FIRST, c.COMMENT_CREATE_DATE ASC
    </select>

    <!-- 댓글 작성 -->
    <insert id="insertComment" parameterType="com.project.festive.festiveserver.wagle.dto.CommentDto">
        <selectKey keyProperty="commentNo" resultType="Long" order="BEFORE">
            SELECT SEQ_COMMENT_NO.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO COMMENT (
            COMMENT_NO, BOARD_NO, MEMBER_NO, COMMENT_CONTENT, 
            COMMENT_PARENT_NO, COMMENT_CREATE_DATE, COMMENT_DELETE_YN
        ) VALUES (
            #{commentNo}, #{boardNo}, #{memberNo}, #{commentContent}, 
            #{commentParentNo}, #{commentCreateDate}, #{commentDeleteYn}
        )
    </insert>

    <!-- 댓글 수정 -->
    <update id="updateComment" parameterType="com.project.festive.festiveserver.wagle.dto.CommentDto">
        UPDATE COMMENT 
        SET COMMENT_CONTENT = #{commentContent},
            COMMENT_UPDATE_DATE = #{commentUpdateDate}
        WHERE COMMENT_NO = #{commentNo}
    </update>

    <!-- 댓글 삭제 (논리삭제) -->
    <update id="deleteCommentLogical">
        UPDATE COMMENT 
        SET COMMENT_DELETE_YN = 'Y' 
        WHERE COMMENT_NO = #{commentNo}
    </update>

    <!-- 게시글 댓글 수 업데이트 -->
    <update id="updateBoardCommentCount">
        UPDATE BOARD 
        SET BOARD_COMMENT_COUNT = (
            SELECT COUNT(*) FROM COMMENT WHERE BOARD_NO = #{boardNo} AND COMMENT_DELETE_YN = 'N'
        )
        WHERE BOARD_NO = #{boardNo}
    </update>

    <!-- 게시글 이미지 저장 -->
    <insert id="insertBoardImg">
        INSERT INTO BOARD_IMG (
            BOARD_IMG_NO, BOARD_NO, BOARD_IMG_ORIGINAL, 
            BOARD_IMG_RENAME, BOARD_IMG_PATH, BOARD_IMG_LEVEL
        ) VALUES (
            SEQ_BOARD_IMG_NO.NEXTVAL, #{boardNo}, #{originalName}, 
            #{renameName}, #{imagePath}, #{level}
        )
    </insert>

    <!-- 게시글 이미지 조회 -->
    <select id="selectBoardImages" resultType="String">
        SELECT BOARD_IMG_PATH
        FROM BOARD_IMG
        WHERE BOARD_NO = #{boardNo}
        ORDER BY BOARD_IMG_LEVEL ASC
    </select>

</mapper> 
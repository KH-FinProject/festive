<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.project.festive.festiveserver.admin.model.mapper.AdminMapper">


	<!-- 관리자 이메일 중복 검사 -->
	<select id="checkEmail">
		SELECT COUNT(*) FROM "MEMBER"
		WHERE EMAIL = #{email}
	</select>

	<!-- 관리자 계정 발급 -->
	<insert id="createAdminAccount">
		INSERT INTO "MEMBER" (
		MEMBER_NO,
		ID,
		NAME,
		NICKNAME,
		EMAIL,
		PASSWORD,
		ROLE,
		ENROLL_DATE,
		MEMBER_DEL_FL,
		SANCTION_COUNT
		) VALUES (
		SEQ_MEMBER_NO.NEXTVAL,
		#{email},
		#{name},
		#{name},
		#{email},
		#{password},
		'ADMIN',
		SYSDATE,
		'N',
		0
		)
	</insert>

	<!-- 탈퇴 회원 조회 : 미애 -->
	<select id="selectWithdrawMembers">
		SELECT MEMBER_NO, ID, NAME, NICKNAME, WITHDRAW_DATE
		FROM MEMBER
		WHERE MEMBER_DEL_FL = 'Y'
	</select>

	<!-- 회원 영구 삭제 : 미애 -->
	<delete id="deleteWithdrawMember">
		DELETE FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
		AND
		MEMBER_DEL_FL = 'Y'
	</delete>

	<!-- 탈퇴 회원 복구 : 미애 -->
	<update id="updateWithdrawMember">
		UPDATE MEMBER
		SET MEMBER_DEL_FL = 'N',
		WITHDRAW_DATE =
		NULL
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<!-- 공지글 작성 : 지현 -->
	<insert id="insertBoard">
		INSERT INTO BOARD (
		BOARD_NO, BOARD_CODE, MEMBER_NO, BOARD_TITLE, BOARD_CONTENT,
		READ_COUNT, BOARD_DEL_FL, BOARD_CREAT_DATE
		) VALUES (
		SEQ_BOARD_NO.NEXTVAL, 2, #{memberNo}, #{boardTitle}, #{boardContent},
		0, 'N',
		SYSDATE
		)
	</insert>

	<!-- 게시글 조회 -->
	<select id="selectAllBoards"
		resultType="com.project.festive.festiveserver.wagle.dto.BoardDto">
		SELECT
		B.BOARD_NO,
		B.BOARD_TITLE,
		B.BOARD_CONTENT,
		B.READ_COUNT AS boardViewCount,
		B.BOARD_DEL_FL AS boardDeleteYn,
		CAST(B.BOARD_CREAT_DATE AS TIMESTAMP) AS boardCreateDate,
		CAST(B.BOARD_UPDATE_DATE AS TIMESTAMP) AS boardUpdateDate,
		B.MEMBER_NO,
		B.BOARD_CODE AS boardTypeNo,
		M.NICKNAME AS memberNickname,
		NVL(L.LIKE_COUNT, 0) AS boardLikeCount,
		NVL(C.COMMENT_COUNT, 0) AS boardCommentCount,
		M.PROFILE_IMAGE AS memberProfileImage
		FROM BOARD B
		LEFT JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO
		LEFT JOIN (
		SELECT BOARD_NO, COUNT(*) AS LIKE_COUNT
		FROM "LIKE"
		GROUP BY BOARD_NO
		) L ON B.BOARD_NO = L.BOARD_NO
		LEFT JOIN (
		SELECT BOARD_NO, COUNT(*) AS COMMENT_COUNT
		FROM "COMMENT"
		GROUP BY BOARD_NO
		) C ON B.BOARD_NO = C.BOARD_NO
		WHERE B.BOARD_DEL_FL = 'N'
		AND B.BOARD_CODE IN (1, 2)
		ORDER BY B.BOARD_CODE DESC, B.BOARD_CREAT_DATE DESC
	</select>

	<!-- 게시글 삭제 : 지현 -->
	<delete id="deleteBoard">
		DELETE FROM BOARD
		WHERE BOARD_NO = #{boardNo}
	</delete>


</mapper>